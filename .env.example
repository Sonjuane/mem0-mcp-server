# The transport for the MCP server - either 'sse' or 'stdio' (defaults to SSE if left empty)
TRANSPORT=sse

# Host to bind to if using sse as the transport (leave empty if using stdio)
HOST=0.0.0.0

# Port to listen on if using sse as the transport (leave empty if using stdio)
PORT=8050

# Storage provider - either 'local' or 'postgresql'
# 'local' will store memories in .Mem0-Files directory
# 'postgresql' will use a PostgreSQL database with vector storage
STORAGE_PROVIDER=local

# Local storage configuration (only used when STORAGE_PROVIDER=local)
# Directory name for storing memory files (relative to project root)
LOCAL_STORAGE_DIR=.Mem0-Files

# The provider for your LLM
# Set this to either openai, openrouter, or ollama
# This is needed for Mem0 memory processing
LLM_PROVIDER=openai

# Base URL for the OpenAI compatible instance (default is https://api.openai.com/v1)
# OpenAI: https://api.openai.com/v1
# Ollama (example): http://localhost:11434/v1
# OpenRouter: https://openrouter.ai/api/v1
LLM_BASE_URL=https://api.openai.com/v1

# OpenAI: https://help.openai.com/en/articles/4936850-where-do-i-find-my-openai-api-key
# Open Router: Get your API Key here after registering: https://openrouter.ai/keys
# Ollama: No need to set this unless you specifically configured an API key
LLM_API_KEY=

# The LLM you want to use for processing memories.
# OpenAI example: gpt-4o-mini
# OpenRouter example: anthropic/claude-3.5-sonnet
# Ollama example: qwen2.5:14b-instruct-8k
LLM_CHOICE=gpt-4o-mini

# The embedding model you want to use to store memories - this needs to be from the same provider as set above.
# OpenAI example: text-embedding-3-small
# Ollama example: nomic-embed-text
EMBEDDING_MODEL_CHOICE=text-embedding-3-small

# PostgreSQL configuration (only used when STORAGE_PROVIDER=postgresql)
# Postgres DB URL used for mem0
# Format: postgresql://[user]:[password]@[host]:[port]/[database_name]
# Example: postgresql://postgres:mypassword@localhost:5432/mydb
# For Supabase Postgres connection, you can find this in "Connect" (top middle of Supabase dashboard) -> Transaction pooler
DATABASE_URL=

# Default user ID for memory operations
DEFAULT_USER_ID=user

# Memory processing configuration
# Maximum number of memories to return in search results
MAX_SEARCH_RESULTS=10

# Enable debug logging
DEBUG=false

# Express Server Configuration
HTTP_SERVER_ENABLED=true
HTTP_SERVER_PORT=3000
HTTP_SERVER_HOST=0.0.0.0
API_TOKEN=your-secure-api-token-here
CORS_ORIGINS=http://localhost:*,https://localhost:*
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100